/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUIs;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author thinu
 */
public class OrderPizza extends javax.swing.JFrame {

    /**
     * Creates new form OrderPizza
     */
    public OrderPizza() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jButton1 = new javax.swing.JButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jLabel3 = new javax.swing.JLabel();
        jRadioButton5 = new javax.swing.JRadioButton();
        jRadioButton6 = new javax.swing.JRadioButton();
        jRadioButton7 = new javax.swing.JRadioButton();
        jLabel4 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel1.setText("Pizza Base:");

        jComboBox1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select", "Tandori Chicken", "BBQ Chicken", "Cutle Fish", "Masala Chicken" }));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel2.setText("Topping:");

        jRadioButton1.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton1.setText("Cheese");
        jRadioButton1.setActionCommand("");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton2.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton2.setText("Pineapple");
        jRadioButton2.setToolTipText("");

        jRadioButton3.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton3.setText("pepperoni");
        jRadioButton3.setActionCommand("");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jButton1.setText("Place Order");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jRadioButton4.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton4.setText("Olive");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel3.setText("Extras:");

        jRadioButton5.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton5.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton5.setText("Extra Cheese");
        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jRadioButton6.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton6.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton6.setText("Extra Spizy");
        jRadioButton6.setToolTipText("");

        jRadioButton7.setBackground(new java.awt.Color(255, 255, 255));
        jRadioButton7.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jRadioButton7.setText("Extra Sauce");
        jRadioButton7.setActionCommand("");
        jRadioButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton7ActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jLabel4.setText("Customer Name:");

        jTextField1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/SRC/pizza4.jpeg"))); // NOI18N
        jLabel5.setPreferredSize(new java.awt.Dimension(5472, 3648));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4))
                        .addGap(38, 38, 38)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jRadioButton3)
                            .addComponent(jRadioButton2)
                            .addComponent(jRadioButton1)
                            .addComponent(jRadioButton4)
                            .addComponent(jRadioButton5)
                            .addComponent(jRadioButton7)
                            .addComponent(jTextField1)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 209, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jRadioButton6)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 220, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(87, 87, 87)))
                .addGap(24, 24, 24))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 305, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jRadioButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton4)
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jRadioButton5)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jRadioButton7)
                .addGap(39, 39, 39)
                .addComponent(jButton1)
                .addContainerGap(40, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:

        // Builder Pattern
        class Pizza {
            
            private String base;
            private List<String> toppings;
            private List<String> extras;
            
            public Pizza(String base) {
                this.base = base;
                this.toppings = new ArrayList<>();
                this.extras = new ArrayList<>();
            }
            
            public void addTopping(String topping) {
                toppings.add(topping);
            }
            
            public void addExtras(String extra) {
                extras.add(extra);
            }
            
            public String getDetails() {
                return "Pizza: " + base + " || Toppings: " + String.join(", ", toppings) + " || Extras: " + String.join(", ", extras);
            }
        }
        
        
        class PizzaBuilder {
            
            private Pizza pizza;
            
            public PizzaBuilder(String base) {
                pizza = new Pizza(base);
            }
            
            public PizzaBuilder addTopping(String topping) {
                pizza.addTopping(topping);
                return this;
            }
            
            public PizzaBuilder addExtras(String extra) {
                pizza.addExtras(extra);
                return this;
            }
            
            public Pizza build() {
                return pizza;
            }
        }
        
        
        // Flyweight Pattern
        class IngredientFactory {
            
            private static Map<String, String> ingredients = new HashMap<>();
            
            public static String getIngredient(String name) {
                if (!ingredients.containsKey(name)) {
                    ingredients.put(name, name);
                }
                return ingredients.get(name);
            }
        }
        
        // Interpreter Pattern
        interface Expression {
            
            void interpret(PizzaBuilder pizzaBuilder);
        }
        
        class ExtraExpression implements Expression {
            
            @Override
            public void interpret(PizzaBuilder pizzaBuilder) {
                
                if (jRadioButton1.isSelected() == false && jRadioButton2.isSelected() == false && jRadioButton3.isSelected() == false && jRadioButton4.isSelected() == false) {
                    pizzaBuilder.addTopping(IngredientFactory.getIngredient("No Topping"));
                }
                
                if (jRadioButton1.isSelected()) {
                    pizzaBuilder.addTopping(IngredientFactory.getIngredient("cheese"));
                }
                
                if (jRadioButton2.isSelected()) {
                    pizzaBuilder.addTopping(IngredientFactory.getIngredient("Pineapple"));
                }
                
                if (jRadioButton3.isSelected()) {
                    pizzaBuilder.addTopping(IngredientFactory.getIngredient("pepperoni"));
                }
                
                if (jRadioButton4.isSelected()) {
                    pizzaBuilder.addTopping(IngredientFactory.getIngredient("Olive"));
                }
                
                if (jRadioButton5.isSelected() == false && jRadioButton6.isSelected() == false && jRadioButton7.isSelected() == false) {
                    pizzaBuilder.addExtras(IngredientFactory.getIngredient("No Extras"));
                }
                
                if (jRadioButton5.isSelected()) {
                    pizzaBuilder.addExtras(IngredientFactory.getIngredient("Extra Cheese"));
                }
                if (jRadioButton6.isSelected()) {
                    pizzaBuilder.addExtras(IngredientFactory.getIngredient("Extra Spizy"));
                }
                if (jRadioButton7.isSelected()) {
                    pizzaBuilder.addExtras(IngredientFactory.getIngredient("Extra Sauce"));
                }
                
            }
        }
        
        // Observer Pattern
        interface Observer {
            
            void update(String message);
        }
        
        class Customer implements Observer {
            
            private String name;
            
            public Customer(String name) {
                this.name = name;
            }
            
            @Override
            public void update(String message) {
                System.out.println(name + " received a message: " + message);
            }
        }
        
        class OrderManager implements Observer {
            
            private List<Observer> customers = new ArrayList<>();
            
            public void addObserver(Observer observer) {
                customers.add(observer);
            }
            
            @Override
            public void update(String message) {
                for (Observer observer : customers) {
                    observer.update(message);
                }
            }
        }
        
        // Chain of Responsibility Pattern
        abstract class Step {
            
            private Step nextStep;
            
            public Step(Step nextStep) {
                this.nextStep = nextStep;
            }
            
            public abstract void handle();
            
            protected void moveToNextStep() {
                if (nextStep != null) {
                    nextStep.handle();
                }
            }
        }
        
        class AcceptingStep extends Step {
            
            public AcceptingStep(Step nextStep) {
                super(nextStep);
            }
            
            @Override
            public void handle() {
                System.out.println("Order is accepted.");
                moveToNextStep();
            }
        }
        
        class CookingStep extends Step {
            
            public CookingStep(Step nextStep) {
                super(nextStep);
            }
            
            @Override
            public void handle() {
                System.out.println("Pizza is being cooked.");
                moveToNextStep();
            }
        }
        
        class PackingStep extends Step {
            
            public PackingStep(Step nextStep) {
                super(nextStep);
            }
            
            @Override
            public void handle() {
                System.out.println("Pizza is packed.");
                moveToNextStep();
            }
        }
        
        class HandoverStep extends Step {
            
            public HandoverStep() {
                super(null);
            }
            
            @Override
            public void handle() {
                System.out.println("Pizza is handed over to the driver.");
            }
        }
        
        
        //Other
        
        String pizzaBase = jComboBox1.getSelectedItem().toString();
        String cusName = jTextField1.getText();
        
        if (cusName == "") {
            JOptionPane.showMessageDialog(this, "Please enter cutomer name.", "Attention", JOptionPane.INFORMATION_MESSAGE);
            
        } else if (pizzaBase.equalsIgnoreCase("Select")) {
            JOptionPane.showMessageDialog(this, "Please Select Pizza base.", "Attention", JOptionPane.INFORMATION_MESSAGE);
            
        } else {
            
            PizzaBuilder pizzaBuilder = new PizzaBuilder(pizzaBase);
            Expression extraCheeseExpression = new ExtraExpression();
            extraCheeseExpression.interpret(pizzaBuilder);
            Pizza pizza = pizzaBuilder.build();
            
            System.out.println(pizza.getDetails());
            
            OrderManager orderManager = new OrderManager();
            Customer customer1 = new Customer(cusName);
            
            orderManager.addObserver(customer1);
            
            orderManager.update("Your order is on its way!");
            
            Step orderProcessingSteps = new AcceptingStep(new CookingStep(new PackingStep(new HandoverStep())));
            orderProcessingSteps.handle();
            
            JOptionPane.showMessageDialog(this, "Order Placed.", "Sucess", JOptionPane.INFORMATION_MESSAGE);
            
            jTextField1.setText("");
            jComboBox1.setSelectedIndex(0);
            jRadioButton1.setSelected(false);
            jRadioButton2.setSelected(false);
            jRadioButton3.setSelected(false);
            jRadioButton4.setSelected(false);
            jRadioButton5.setSelected(false);
            jRadioButton6.setSelected(false);
            jRadioButton7.setSelected(false);
        }

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jRadioButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton7ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(OrderPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(OrderPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(OrderPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(OrderPizza.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new OrderPizza().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JRadioButton jRadioButton6;
    private javax.swing.JRadioButton jRadioButton7;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
